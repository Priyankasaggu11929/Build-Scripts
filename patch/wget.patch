--- src/openssl.c	2018-12-26 14:58:39.000000000 -0500
+++ src/openssl.c	2018-12-29 10:28:20.000000000 -0500
@@ -325,7 +325,46 @@
     }
 
   SSL_CTX_set_default_verify_paths (ssl_ctx);
-  SSL_CTX_load_verify_locations (ssl_ctx, opt.ca_cert, opt.ca_directory);
+
+  /*
+   * Don't include CA directory if user specified a particular CA file
+   * via --ca-certificate. The CA directory adds attack surface when
+   * it includes a typical unpacked cacerts.pem. An unpacked cacerts
+   * will include 130 or so CA roots and intermediates. Note that this
+   * may cause a fetch to fail if the server responds with a redirect
+   * and the target site uses a different CA than the original site.
+   */
+  if (opt.ca_cert)
+    SSL_CTX_load_verify_locations (ssl_ctx, opt.ca_cert, NULL);
+  else
+    SSL_CTX_load_verify_locations (ssl_ctx, opt.ca_cert, opt.ca_directory);
+
+  /* Set X509_V_FLAG_PARTIAL_CHAIN to allow the client to anchor trust in
+   * a non-self-signed certificate. This defies RFC 4158 (Path Building)
+   * which defines a trust anchor in terms of a self-signed certificate.
+   * However, it substantially reduces attack surface by prunning the tree
+   * of unneeded trust points. For example, the cross-certified
+   * Let's Encrypt X3 CA, which protects gnu.org and appears as an
+   * intermediate CA to clients, can be used as a trust anchor without
+   * the entire IdentTrust PKI.
+   */
+  X509_VERIFY_PARAM *param = X509_VERIFY_PARAM_new();
+  if (param)
+    {
+    /* We only want X509_V_FLAG_PARTIAL_CHAIN, but the OpenSSL docs
+     * say to use X509_V_FLAG_TRUSTED_FIRST also. It looks like
+     * X509_V_FLAG_TRUSTED_FIRST applies to a collection of trust
+     * anchors and not a single trust anchor.
+     */
+    (void)X509_VERIFY_PARAM_set_flags(param, X509_V_FLAG_TRUSTED_FIRST | X509_V_FLAG_PARTIAL_CHAIN);
+    SSL_CTX_set1_param(ssl_ctx, param);
+    X509_VERIFY_PARAM_free(param);
+    }
+  else
+    {
+    /* TODO: How does Wget handle a malloc failure? */
+    goto error;
+    }
 
   if (opt.crl_file)
     {
