--- crypto/cast/cast_lcl.h
+++ crypto/cast/cast_lcl.h
@@ -152,10 +152,8 @@
 
 #if defined(OPENSSL_SYS_WIN32) && defined(_MSC_VER)
 # define ROTL(a,n)     (_lrotl(a,n))
-#elif defined(PEDANTIC)
-# define ROTL(a,n)     ((((a)<<(n))&0xffffffffL)|((a)>>((32-(n))&31)))
 #else
-# define ROTL(a,n)     ((((a)<<(n))&0xffffffffL)|((a)>>(32-(n))))
+# define ROTL(a,n)     ((((a)<<((n)&31))|((a)>>((-(n))&31)))&0xffffffffL)
 #endif
 
 #define C_M    0x3fc
--- crypto/lhash/lhash.c
+++ crypto/lhash/lhash.c
@@ -463,7 +463,7 @@
         v = n | (*c);
         n += 0x100;
         r = (int)((v >> 2) ^ v) & 0x0f;
-        ret = (ret << r) | (ret >> (32 - r));
+        ret = (ret << ((r)&31)) | (ret >> ((-r)&31));
         ret &= 0xFFFFFFFFL;
         ret ^= v * v;
         c++;
--- crypto/ec/ecp_nistp224.c
+++ crypto/ec/ecp_nistp224.c
@@ -317,10 +317,22 @@
  */
 static void bin28_to_felem(felem out, const u8 in[28])
 {
+#ifdef PEDANTIC
+    uint64_t temp;
+    memcpy(&temp, in+ 0, 8);
+    out[0] = temp & 0x00ffffffffffffff;
+    memcpy(&temp, in+ 7, 8);
+    out[1] = temp & 0x00ffffffffffffff;
+    memcpy(&temp, in+14, 8);
+    out[2] = temp & 0x00ffffffffffffff;
+    memcpy(&temp, in+20, 8);
+    out[3] = temp >> 8;
+#else   
     out[0] = *((const uint64_t *)(in)) & 0x00ffffffffffffff;
     out[1] = (*((const uint64_t *)(in + 7))) & 0x00ffffffffffffff;
     out[2] = (*((const uint64_t *)(in + 14))) & 0x00ffffffffffffff;
     out[3] = (*((const uint64_t *)(in+20))) >> 8;
+#endif
 }
 
 static void felem_to_bin28(u8 out[28], const felem in)
