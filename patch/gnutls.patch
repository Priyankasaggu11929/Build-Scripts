--- tests/slow/cipher-api-test.c
+++ tests/slow/cipher-api-test.c
@@ -84,10 +84,16 @@
 	if (ret < 0)
 		fail("gnutls_cipher_init failed\n"); /*errcode 1 */
 
+#if defined(OPENSSL_VERSION_NUMBER)
+	ret = gnutls_cipher_encrypt(ch, data, sizeof(data)-1);
+	if (ret < 0)
+		fail("failed in encrypting partial data on block cipher\n");
+#else
 	/* try encrypting in a way that violates nettle's block conventions */
 	ret = gnutls_cipher_encrypt(ch, data, sizeof(data)-1);
 	if (ret >= 0)
 		fail("succeeded in encrypting partial data on block cipher\n");
+#endif
 
 	gnutls_cipher_deinit(ch);
 
@@ -137,9 +143,15 @@
 	if (ret < 0)
 		fail("could not add auth data\n");
 
+#if defined(OPENSSL_VERSION_NUMBER)
+	ret = gnutls_cipher_add_auth(ch, data, 16);
+	if (ret < 0)
+		fail("failed in adding auth data after partial data were given\n");
+#else
 	ret = gnutls_cipher_add_auth(ch, data, 16);
 	if (ret >= 0)
-		fail("succeeded in adding auth data data after partial data were given\n");
+		fail("succeeded in adding auth data after partial data were given\n");
+#endif
 
 	gnutls_cipher_deinit(ch);
 
@@ -188,9 +200,15 @@
 	if (ret < 0)
 		fail("could not encrypt data\n");
 
+#if defined(OPENSSL_VERSION_NUMBER)
+	ret = gnutls_cipher_encrypt(ch, data, sizeof(data));
+	if (ret < 0)
+		fail("failed in encrypting partial data after partial data were given\n");
+#else
 	ret = gnutls_cipher_encrypt(ch, data, sizeof(data));
 	if (ret >= 0)
 		fail("succeeded in encrypting partial data after partial data were given\n");
+#endif
 
 	gnutls_cipher_deinit(ch);
 
@@ -269,7 +287,9 @@
 	start("aes256-gcm", GNUTLS_CIPHER_AES_256_GCM, 1);
 	start("aes128-cbc", GNUTLS_CIPHER_AES_128_CBC, 0);
 	start("aes256-cbc", GNUTLS_CIPHER_AES_256_CBC, 0);
+#ifdef ENABLE_SSL3
 	start("3des-cbc", GNUTLS_CIPHER_3DES_CBC, 0);
+#endif
 	if (!gnutls_fips140_mode_enabled()) {
 		start("camellia128-gcm", GNUTLS_CIPHER_CAMELLIA_128_GCM, 1);
 		start("camellia256-gcm", GNUTLS_CIPHER_CAMELLIA_256_GCM, 1);
