--- lib/unilbrk/u8-possible-linebreaks.c  2019-03-07 15:56:00.883711905 -0500
+++ lib/unilbrk/u8-possible-linebreaks.c  2019-03-07 15:59:57.018507522 -0500
@@ -46,9 +46,10 @@
   char *seen_space2 = NULL; /* At least two spaces after the last non-space? */

   /* Don't break inside multibyte characters.  */
-  memset (p, UC_BREAK_PROHIBITED, n);
+  if (p)
+      memset (p, UC_BREAK_PROHIBITED, n);

-  while (s < s_end)
+  while (p && s < s_end)
     {
       ucs4_t uc;
       int count = u8_mbtouc_unsafe (&uc, s, s_end - s);
--- lib/unistr/u8-cmp.c  2019-03-07 16:04:35.964722185 -0500
+++ lib/unistr/u8-cmp.c  2019-03-07 16:07:17.081535803 -0500
@@ -35,5 +35,8 @@
 u8_cmp (const uint8_t *s1, const uint8_t *s2, size_t n)
 {
   /* Use the fact that the UTF-8 encoding preserves lexicographic order.  */
+  uint8_t x = 0; /* fake NULL string */
+  if (s1 == NULL) s1 = &x;
+  if (s2 == NULL) s2 = &x;
   return memcmp ((const char *) s1, (const char *) s2, n);
 }
--- lib/uniconv/u8-conv-from-enc.c  2019-03-07 16:11:06.683420819 -0500
+++ lib/uniconv/u8-conv-from-enc.c  2019-03-07 16:15:45.334641235 -0500
@@ -78,7 +78,7 @@
         result = resultbuf;
       else
         {
-          result = (uint8_t *) malloc (srclen > 0 ? srclen : 1);
+          result = (uint8_t *) malloc (src && srclen > 0 ? srclen : 1);
           if (result == NULL)
             {
               errno = ENOMEM;
@@ -86,8 +86,16 @@
             }
         }

-      memcpy ((char *) result, src, srclen);
-      *lengthp = srclen;
+      if (src)
+        {
+           memcpy ((char *) result, src, srclen);
+           *lengthp = srclen;
+       }
+      else
+        {
+           *result = 0;
+           *lengthp = 0;
+        }
       return result;
     }
   else
--- lib/unictype/numeric.c  2019-03-07 16:17:15.726415173 -0500
+++ lib/unictype/numeric.c  2019-03-07 16:19:28.579613162 -0500
@@ -49,7 +49,7 @@
               /* level3 contains 8-bit values, packed into 16-bit words.  */
               unsigned int lookup3 =
                 ((u_numeric.level3[index3>>4]
-                  | (u_numeric.level3[(index3>>4)+1] << 16))
+                  | ((unsigned int)(u_numeric.level3[(index3>>4)+1]) << 16))
                  >> (index3 % 16))
                 & 0xff;

--- lib/unilbrk/u16-possible-linebreaks.c  2019-03-07 16:20:27.392815429 -0500
+++ lib/unilbrk/u16-possible-linebreaks.c  2019-03-07 16:21:07.410272634 -0500
@@ -46,9 +46,10 @@
   char *seen_space2 = NULL; /* At least two spaces after the last non-space? */

   /* Don't break inside multibyte characters.  */
-  memset (p, UC_BREAK_PROHIBITED, n);
+  if (p)
+      memset (p, UC_BREAK_PROHIBITED, n);

-  while (s < s_end)
+  while (p && s < s_end)
     {
       ucs4_t uc;
       int count = u16_mbtouc_unsafe (&uc, s, s_end - s);
